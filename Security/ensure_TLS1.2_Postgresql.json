{
    "properties": {
      "displayName": "ensure tls 1.2 postgresql",
      "policyType": "Custom",
      "mode": "Indexed",
      "metadata": {
        "version": "1.0.0",
        "category": "custom",
        "source": "https://github.com/Azure/Enterprise-Scale/",
        "alzCloudEnvironments": [
          "AzureCloud",
          "AzureChinaCloud",
          "AzureUSGovernment"
        ],
        "createdBy": "025a2b52-c857-4930-ba5b-a32b02c98bbd",
        "createdOn": "2023-02-12T22:50:44.048596Z",
        "updatedBy": null,
        "updatedOn": null
      },
      "parameters": {
        "effect": {
          "type": "String",
          "metadata": {
            "displayName": "Effect Azure Database for PostgreSQL server",
            "description": "Enable or disable the execution of the policy minimum TLS version Azure Database for PostgreSQL server"
          },
          "allowedValues": [
            "DeployIfNotExists",
            "Disabled"
          ],
          "defaultValue": "DeployIfNotExists"
        },
        "minimalTlsVersion": {
          "type": "String",
          "metadata": {
            "displayName": "Select version for PostgreSQL server",
            "description": "Select version minimum TLS version Azure Database for PostgreSQL server to enforce"
          },
          "allowedValues": [
            "TLS1_2",
            "TLS1_0",
            "TLS1_1",
            "TLSEnforcementDisabled"
          ],
          "defaultValue": "TLS1_2"
        }
      },
      "policyRule": {
        "if": {
          "allOf": [
            {
              "field": "type",
              "equals": "Microsoft.DBforPostgreSQL/servers"
            },
            {
              "anyOf": [
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                  "notEquals": "Enabled"
                },
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
                  "notEquals": "[parameters('minimalTlsVersion')]"
                }
              ]
            }
          ]
        },
        "then": {
          "effect": "[parameters('effect')]",
          "details": {
            "type": "Microsoft.DBforPostgreSQL/servers",
            "existenceCondition": {
              "allOf": [
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                  "equals": "Enabled"
                },
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
                  "equals": "[parameters('minimalTlsVersion')]"
                }
              ]
            },
            "name": "current",
            "roleDefinitionIds": [
              "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
            ],
            "deployment": {
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "resourceName": {
                      "type": "String"
                    },
                    "minimalTlsVersion": {
                      "type": "String"
                    },
                    "location": {
                      "type": "String"
                    }
                  },
                  "variables": {},
                  "resources": [
                    {
                      "type": "Microsoft.DBforPostgreSQL/servers",
                      "apiVersion": "2017-12-01",
                      "name": "[concat(parameters('resourceName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sslEnforcement": "[if(equals(parameters('minimalTlsVersion'), 'TLSEnforcementDisabled'),'Disabled', 'Enabled')]",
                        "minimalTlsVersion": "[parameters('minimalTlsVersion')]"
                      }
                    }
                  ],
                  "outputs": {}
                },
                "parameters": {
                  "resourceName": {
                    "value": "[field('name')]"
                  },
                  "minimalTlsVersion": {
                    "value": "[parameters('minimalTlsVersion')]"
                  },
                  "location": {
                    "value": "[field('location')]"
                  }
                }
              }
            }
          }
        }
    }
}
}